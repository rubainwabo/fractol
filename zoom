#include <stdio.h>

int		main(void)
{
	float	zoom_x;
	float	zoom_y;

	zoom_x = 1200 / 2.5 + 0.6;
	zoom_y = 1200 / 2.0;
	printf("zoom_x = %f and zoom_y = %f\n", zoom_x, zoom_y);
	return (0);
}

/*	float	zr_s;
	float	zi_s;
	float	z_i;
	float	xtemp;
	float	ytemp;*/
	/*f->x = 0.0f;
	while (f->x < WIDTH)
	{
		f->y = 0.0f;
		while (f->y < HEIGHT)
		{
			f->c_r = f->x1 + (f->x / WIDTH) * (f->x2 - f->x1);
			f->c_i = f->y1 + (f->y / HEIGHT) * (f->y2 - f->y1);
			f->z_r = 0;
			f->z_i = 0;
			f->i = 0;
			zr_s = f->z_r * f->z_r;
			zi_s = f->z_i * f->z_i;
			//if (!(ft_opti(f->c_r, f->c_i)))
				//f->i = f->it_max;
		//	else
		//	{
				while (zr_s + zi_s <= (1 << 16) && f->i < f->it_max)
				{
					//if (!(ft_opti(f->x, f->y)))
						//break;
					f->tmp = f->z_r;
				 	f->z_r = zr_s - zi_s + f->c_r;
					f->z_i = (f->z_i + f->z_i) * f->tmp + f->c_i;
					if (f->z_r == xtemp && f->z_i == ytemp)
					{
						f->i = f->it_max;
						break;
					}
					f->z_r = xtemp;
					f->z_i = ytemp;
					zr_s = pow(f->z_r, 2);
					zi_s = pow(f->z_i, 2);
					f->i++;
				}
				c = ft_init();
				ft_get_rgb_smooth(c, f->i, f->it_max);
		//	}
			if (f->i == f->it_max)
				mlx_put_pixel_img(image_str, f->x, f->y, 0x0);
			else
				mlx_put_pixel_img(image_str, f->x, f->y, ((c->r << 16) | (c->g << 8) | c->b));
			f->y++;
		}
		f->x++;
	}*/
